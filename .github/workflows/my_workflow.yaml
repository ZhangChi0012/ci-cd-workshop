name: my workflow

on:
    push:
        branches:
            - 'v[0-9]+\.+[0-9]+'

jobs:
    my_first_ci:
        if: ${{ !startsWith(github.event.head_commit.message, '#NORUN') }}
        runs-on: ubuntu-latest

        steps:
        - name: check out
          id: check_out
          uses: actions/checkout@v4

        - name: scanning
          id: scanning
          uses: aquasecurity/trivy-action@master
          with:
            scan-type: 'fs'
            severity: 'HIGH' #'HIGH' for fail or 'CRITICAL' for success
            format: 'table'
            output: 'trivy-result.txt'

        - name: check results
          id: check_results
          run: |
            if [[ -s trivy-result.txt ]]; then
              echo "vulnerabilities=true" >> $GITHUB_ENV
            else
              echo "vulnerabilities=false" >> $GITHUB_ENV
            fi
        
        - name: send to slack
          id: send_to_slack
          if: env.vulnerabilities == 'true'
          uses: rtCamp/action-slack-notify@v2
          env: 
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
            SLACK_COLOR: '#dc143c'
            SLACK_TITLE: 'Scan failed'
            SLACK_MESSAGE: |
                Failed trivy scan, see uploaded report
  
        - name: upload trivy result
          id: upload_trivy_result
          if: env.vulnerabilities == 'true'
          uses: MeilCli/slack-upload-file@v3
          with: 
              slack_token: ${{ secrets.SLACK_TOKEN }}
              channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
              file_path: 'trivy-result.txt'
              title: 'scan result'
              initial_comment: 'scan report by ZHANG CHI'
  
        - name: fail the job
          id: fail_the_job
          if: env.vulnerabilities == 'true'
          run: exit 1
          
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v3

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Build and push
          uses: docker/build-push-action@v5
          with:
            context: fortunes_2023_10_15-14_13_50/fortunes # file: Path to the Dockerfile (default {context}/Dockerfile)
            push: true
            tags: zhangchi0012/cicd-worshop:${{ github.event.head_commit.message }} # repository name must be lowercase

        - name: Install Cosign
          uses: sigstore/cosign-installer@v3.1.1
          with:
            cosign-release: 'v2.2.0' # should be the same version as the installed one ('cosign version' to check in terminal)

        - name: Sign image with a key
          run: |
            cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${TAGS}"
          env:
            TAGS: zhangchi0012/cicd-worshop:${{ github.event.head_commit.message }}
            COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
            COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}


        - name: send success message to slack
          id: send_success_message_to_slack
          uses: rtCamp/action-slack-notify@v2
          env: 
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
            SLACK_TITLE: 'Image build and signed'
            SLACK_MESSAGE: |
                Name: ZHANG CHI
                Matriculation number: A0286006H
                Email: e1221818@u.nus.edu
                Git: https://github.com/ZhangChi0012/ci-cd-workshop
                Image: https://hub.docker.com/repository/docker/zhangchi0012/cicd-worshop/general
